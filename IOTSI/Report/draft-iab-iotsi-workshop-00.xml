<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.30 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-iab-iotsi-workshop-00.txt" category="info">

  <front>
    <title abbrev="IOTSI">Report from the Internet of Things (IoT) Semantic Interoperability (IOTSI) Workshop 2016</title>

    <author initials="J." surname="Jimenez" fullname="Jaime Jimenez">
      <organization></organization>
      <address>
        <email>jaime.jimenez@ericsson.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <email>hannes.tschofenig@arm.com</email>
      </address>
    </author>
    <author initials="D." surname="Thaler" fullname="Dave Thaler">
      <organization></organization>
      <address>
        <email>dthaler@microsoft.com</email>
      </address>
    </author>

    <date year="2016" month="May" day="24"/>

    
    
    

    <abstract>


<t>This document provides a summary of the ‘Workshop on Internet of Things (IoT) Semantic Interoperability (IOTSI)’ <xref target="IOTSIWS"/>, which took place in Santa Clara, CA, on March 17-18, 2016.  The main goal of the workshop was to foster a discussion on the different approaches used by companies and standards developing organizations to accomplish interoperability at the application layer.  This report summarizes the discussions and lists recommendations to the standards community. The views and positions in this report are those of the workshop participants and do not necessarily reflect those of the authors and the Internet Architecture Board (IAB), which organized the workshop.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The Internet Architecture Board (IAB) holds occasional workshops designed to consider long-term issues and strategies for the Internet, and to suggest future directions for the Internet architecture. The investigated topics often require coordinated efforts of many organizations and industry bodies to improve an identified problem. One of the targets of the workshops is to establish communication between relevant organizations, specially when the topics are out of the scope for the Internet Engineering Task Force (IETF). This long-term planning function of the IAB is complementary to the ongoing engineering efforts performed by working groups of the IETF.</t>

<t>Increasing interoperability in the area of Internet of Things (IoT) has been a top priority for many standards organizations and pariticularly the lower layers of the Internet protocol stack have received a lot of attention. Also at the application layer, such as with CoAP and HTTP, there is a trend in reusing RESTful design patterns. However, data exchanged on top of these application layer protocols there is still a lot of fragmentation and the same degree of increase in interoperability has not been observed.</t>

<t>Thus, the IAB decided to organize a workshop to reach out to relevant stakeholders to explore the state-of-the-art and to identify communality and gaps.</t>

<t><list style="symbols">
  <t>The different perceived state of the art on data and information models.</t>
  <t>The lack of an encoding-independent standardization of the information, the so-called information model.</t>
  <t>The strong relationship with the underlying communication pattern, such as remote procedure calls (RPC), publish/subscribe or RESTful designs.</t>
  <t>Identifying which similar concepts groups have develop in parallel, specially those that would require only slight modifications to solve interoperability.</t>
  <t>Identifying how existing data models can be mapped against each other to offer inter working.</t>
  <t>Identifying common use cases for cooperation and harmonization.</t>
</list></t>

</section>
<section anchor="terminology" title="Terminology">

<t>The first roadblock to semantic interoperability is the lack of a common vocabulary to start the discussion. There is a need to align between participating organizations on a common set of basic terms. <xref target="RFC3444"/> does a start by separating conceptual models for designers or Information Models (IMs) and concrete detailed definitions for implementors or Data Models (DMs). There are concepts that are undefined in that RFC and elsewhere, such as the interaction with the resources of an endpoint or Interaction Model. Therefore the three “main” common models that could be identified were:</t>

<t><list style="hanging">
  <t hangText='Information Model (IM)'>
  it defines an environment at the highest level of abstraction, they express the desired functionality. They can be defined informally (e.g. in plain English) or more formally (e.g. UML, Entity-Relationship Diagrams, etc.). Implementation details are hidden.</t>
  <t hangText='Data Model (DM)'>
  it defines concrete data representations at a lower level of abstraction, including implementation and protocol-specific details. Some examples are: SNMP Management Information Base (MIBs), W3C Thing Description (TD) Things, YANG models, LWM2M Schemas, OCF Schemas and so on.</t>
  <t hangText='Interaction Model (IN)'>
  it defines how data is accessed and retrieved from the endpoints, being therefore tied to the specific communication pattern that the system has (e.g. REST methods, Publish/Subscribe operations or RPC-calls).</t>
</list></t>

<t>Another identified terminology issue is the semantic meaning overload that some terms have. Meaning will vary depending on the context the term is used. Some examples of such terms are: semantics, models, encoding, serialization format, media types or encoding types. Due to time constraints no concrete terminology was agreed upon, however work will continue within each organization to create various terminology documents, see <xref target="IOTSIGIT"/>.</t>

</section>
<section anchor="architecture" title="Architecture">

<t>Architectures follow different design patterns, some are REST-oriented with clear methods to find and manipulate resources on endpoints with almost no state kept between them. Others are more Publish/Subscribe-oriented that focus on the flow of information based on the topics of the information that is being shared. Others are RPC-like requiring to know beforehand the set of parameters that are accessed, requiring to generate code both on the client and server side, they are tightly coupled and service-oriented.</t>

<t><list style="hanging">
  <t hangText='Thing-hub-cloud'>
  things talk to a hub, which talks back to them and to the cloud. There is a spectrum of emphasis on the hub vs. the cloud. For some the hub is simply an access point; for others it is a critical place for control loops and ALGs.</t>
  <t hangText='Meta Thing'>
  some things are actually virtual, like an alarm composed of clock, lights, and thermostat.</t>
  <t hangText='Nearby things'>
  some things may be geospatially related even if they are not on the same network or within the same administrative domain.</t>
</list></t>

<t>Current data models and definitions for “things” often focus on defining actual physical devices and representing their state. That focus should perhaps be shifted into a more holistic or user-oriented perspective, defining abstract concepts as well. On the other a lot of focus is placed on human interaction with physical devices while IoT will be more oriented to interaction between “things” instead.</t>

<t>Those things should be designed to be multiple-purpose, keeping in mind that solutions should be open-ended to facilitate new usages and new future domains of operation. this pattern has already happened, devices that were intended for one purpose end up being used for a different one given the right context ((e.g. smart phone led light turned out to be a heartrate monitor).
IoT domain is currently missing insights into what user actually expect.</t>

</section>
<section anchor="what-problems-to-solve" title="What Problems to Solve">

<t>Although the workshop focused on a specific problem it became obvious from the position papers that various organizations, industry groups and individuals attempted to solve different problems. At least the following goals have been described:</t>

<t><list style="symbols">
  <t>Formal Languages for Documentation Purposes</t>
</list></t>

<t>Standardization organizations are in the need for a more formal description of their information and data models in order to simplify review, and publication. For example, the Open Mobile Alliance (OMA) used an XML schema <xref target="LWM2M-Schema"/> to describe their object definitions (i.e., data model) as XML instance documents. These XML documents offer an alternative way of describing objects compared to the tabular representation found in the specification itself. The XML files of standardized objects are available for download at <xref target="OMNA"/>. Furthermore, a tool is offered to define new objects and resources. The online editor tool can be found at <xref target="OMA-Editor"/>.</t>

<t><list style="symbols">
  <t>Formal Languages for Code Generation</t>
</list></t>

<t>Formal data and information modelling languages for use by developers to enable code generation. For example, the Allseen Visual Studio Plugin <xref target="Allseen-Plugin"/> offers a wizzard to generate code based on the formal description of the data model. Another example of a data modelling language that can be used for code generation is YANG. A popular tool to help with code generation of YANG modules is pyang <xref target="PYANG"/>.</t>

<t><list style="symbols">
  <t>Debugging Support</t>
</list></t>

<t>Ability to allow debugging tools to implement generic object browsers by utilizing the standardized information and data model. Example: NRF Bluetooth Smart sniffer from Nordic Semiconductor <xref target="nRF-Sniffer"/>.</t>

<t><list style="symbols">
  <t>Translation</t>
</list></t>

<t>The ability for gateways and other similar devices to dynamically translate (or map) one data model to another one. An example of this idea can be found in <xref target="UDI"/>.</t>

<t><list style="symbols">
  <t>Runtime Discovery</t>
</list></t>

<t>Allow IoT devices to exchange information, potentially along with the data exchange, to discover meta-data about the data and, potentially, even a self-describing interaction model. An example of such an approach has been shown with HATEOAS <xref target="HATEOAS"/>.</t>

</section>
<section anchor="translation" title="Translation">

<t>One of the targets of interoperability is to create translators between the data models. There are analogies with gateways back in 1985 when they were used to translate between network protocols, eventually IP took over providing interoperability, however we lost some of the features provided by those other protocols. The creation of an equivalent “hub/s” that offer translation between the different data models or data semantics seems one of the ways forward. Some lose of expressiveness due to the translation between models seems also unavoidable.</t>

<t>When it comes to translation two different distinctions appear: translating data between data models and translating data models. The first one implies doing the translation at runtime while the second performs one translation between the data models one time, like translating a YANG model to a RAML/JSON one. Indeed, for every IM multiple DMs could be translated.</t>

<t>In a sense these distinctions affect as to when the translation is performed. It can be done at “design time” when the information model is done, it can be done at runtime for a concrete data model and it can be done depending n the actual serialization.</t>

<t>Yet another distinction will appear depending on the requirements from the application protocols, RPC-style ones might require a slightly different DM than REST ones for similar operations, for example SNMP-traps could be similar to CoAP-Observations but not quite the same. It is easier to translate between systems that follow the same architecture/design pattern than across architectures, full translation might not even be possible (e.g. stateless vs stateful systems).</t>

<t>Translation of models script to translate XML to YANG
Translation of serialized data, on a hub  in order to normalize it to other data model.</t>

</section>
<section anchor="runtime-discovery-work-in-progres-section" title="Runtime Discovery (work in progres section)">

<t>Runtime changes are doing after design and at compile time. 
Discovery, is it devices or data items on devices. 
A lot of people think about devices but also abstract entities. 
To do discovery one question is “how much must “be shared before time. 
The meta-data has also two possible notions, is it instance specific (e.g. location of the thing) or does it have to do with the model itself?</t>

<t>Need to handle change in the environment. Replace things without manual configuration, change control flow, etc. at runtime. 
Few things (vocabulary) is shared a priori. 
Drives the application runtime, “Engine of application state”, we needs self-describing interaction models.
Ravi: nothing prevents HATEOAS + data model
Ari: And OMA LwM2M uses SenML 
Matthias: these are complementary approaches. It is to point out that it is also about Interaction Models. Of course DM are needed to convey data.</t>

<t>Interaction model</t>

<t>You get one entry point (in CoAP it is the RD) and the client tries to perform discovery in order to find and follow links in order to discover capabilities. You submit forms to interact with them. This way you can create processes that span over multiple devices involved in the process. If later one you find that you need something else, you can add new functionality at runtime, next client that comes along will have the same logic but see different capabilities of functionality and therefore use it.</t>

<t>Parts of the information have to be shared a priori. The process is incremental, but once discovered, you don’t need to perform the same operation every time, you can go to the bookmark.</t>

<t>The following are examples of all those in HTML.</t>

<figure><artwork type="html"><![CDATA[
// Links (Anchors) with human-readable information
<a href="about.html">More information</a>
<link rel="stylesheet" href="style.css">

// Templated Links to perform a query with a parameter.
<form method="get" action="search.php">
  <input id="query" type="text">
</form>

// Embedded Links which are used to embed other resources.
<img src="logo.png">
<audio src="audio.ogg">
<video src="video.mp4">

// Forms with the concrete method to be used and the 
<form method="post" action="">
  <input id="name" type="text">
  <input id="age" type="text">
  <input id="homepage" type="text">
</form>
]]></artwork></figure>

<t>The challenge is to define the human-readable parts as machine-readable. For that a vocabulary is necessary to give meaning to the tags. Such information needs to be share beforehand.</t>

<t>In some models everything has to be shared from the beginning, therefore any change would involve changing the whole “framework”. By forcing to share only the bare minimum, you avoid such problem.</t>

<t>Some organizations have created predefined interfaces, all of them are predefined and described, they even provide code generation. The device logic has to support such interfaces, no changes are possible at runtime.</t>

<t>Data models have common elements that have the property of composition. Often alliances provide repositories for data models, static definitions of “things” and how to composed them. With links and composition, you can create more dynamic interactions and describe the environment so that it is discovered in runtime. On top of that there can be annotations with the notion of interfaces. There are also discovery mechanisms where anything related to the state of a thing can be discovered.</t>

<t>– To be edited –</t>

<t>You have to know the vocabulary used a priori, basic assumptions for discovery, there is a handle that will point.</t>

<t>The challenge is to have the features that are exposed and modeled (DM and IM) and to keep the backwards compatibility. As well as having the capability to provide new features in the future.</t>

<t>All of this is done in the case that we want to have something better than just having firmware updates every time.</t>

<t>BLE they have an additional discovery services and some metadata that refers to the data type. A generic client could understand some of the characteristics. The interaction model is not something to be easily reconstructed. With HATEOAS and OCF’s approach, it seems that you can learn how to interact with the device with that metadata.
If someone wants a device he can just download some software and use it. for some of the use cases it is needed. if I buy a heart rate monitor. i can do that as a developer i dont want to use that. It is also needed to keep the support the prior features. Also if I want to change vendor. The notion is that after discovery I know how to use it eve if I don’t know what it is.</t>

<t>It depends also on how do you see the programming environment. 
translation from one data model to another. gw takes the code and does the translation. ar esome of the language so powerful to do that? prototype to do something</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>We would like to thank all paper authors and participants for their contributions. Due to the large number of position paper submissions we were unfortunately unable to invite every author; we would like to apologize to those that could not attend the workshop.</t>

</section>
<section anchor="appendix-a-program-committee" title="Appendix A: Program Committee">

<t>This workshop was organized by the following individuals: Jari Arkko, Ralph Droms, Jaime Jiménez, Michael Koster, Dave Thaler, and Hannes Tschofenig.</t>

<!-- Appendix B: Workshop Material
=============================

Main Workshop Page and position papers
:   [https://www.iab.org/activities/workshops/iotsi/](https://www.iab.org/activities/workshops/iotsi/)

Agenda and Slides
:   [https://www.iab.org/activities/workshops/iotsi/agenda/](https://www.iab.org/activities/workshops/iotsi/agenda/)

Collaborative Github Repository
:   [https://github.com/iotsi](https://github.com/iotsi) -->

</section>
<section anchor="appendix-b-accepted-position-papers" title="Appendix B: Accepted Position Papers">

<t><list style="numbers">
  <t>Jari Arkko, “Gadgets and Protocols Come and Go, Data Is Forever”</t>
  <t>Carsten Bormann, “Noise in specifications hurts”</t>
  <t>Benoit Claise, “YANG as the Data Modelling Language in the IoT space”</t>
  <t>Robert Cragie, “The ZigBee Cluster Library over IP”</t>
  <t>Dee Denteneer, Michael Verschoor, Teresa Zotti, “Fairhair: interoperable IoT services for major Building Automation and Lighting Control ecosystems”</t>
  <t>Universal Devices, “Object Oriented Approach to IoT Interoperability”</t>
  <t>Bryant Eastham, “Interoperability and the OpenDOF Project”</t>
  <t>Stephen Farrell, Alissa Cooper, “It’s Often True: Security’s Ignored (IOTSI) – and Privacy too”</t>
  <t>Christian Groves, Lui Yan, ang Weiwei, “Overview of IoT semantics landscape”</t>
  <t>Ted Hardie, “Loci of Interoperability for the Internet of Things”</t>
  <t>Russ Housley, “Vehicle-to-Vehicle and Vehicle-to-Infrastructure Communications”</t>
  <t>Jaime Jiménez, Michael Koster, Hannes Tschofenig, “IPSO Smart Objects”</t>
  <t>David Jones, IOTDB – “Interoperability Through Semantic Metastandards”</t>
  <t>Sebastian Käbisch, Darko Anicic, “Thing Description as Enabler of Semantic Interoperability on the Web of Things”</t>
  <t>Achilleas Kemos, “Alliance for Internet of Things Innovation Semantic Interoperability Release 2.0, AIOTI WG03 – IoT Standardisation”</t>
  <t>Ari Keränen, Cullen Jennings, “SenML: simple building block for IoT semantic interoperability”</t>
  <t>Dongmyoung Kim, Yunchul Choi, Yonggeun Hong, “Research on Unified Data Model and Framework to Support Interoperability between IoT Applications”</t>
  <t>Michael Koster, “Model-Based Hypertext Language”</t>
  <t>Matthias Kovatsch, Yassin N. Hassan, Klaus Hartke, “Semantic Interoperability Requires Self-describing Interaction Models”</t>
  <t>Kai Kreuzer, “A Pragmatic Approach to Interoperability in the Internet of Things”</t>
  <t>Barry Leiba, “Position Paper”</t>
  <t>Marcello Lioy, “AllJoyn”</t>
  <t>Kerry Lynn, Laird Dornin, “Modeling RESTful APIs with JSON Hyper-Schema”</t>
  <t>Erik Nordmark, “Thoughts on IoT Semantic Interoperability: Scope of security issues”</t>
  <t>Open Geospatial Consortium, “OGC SensorThings API: Communicating “Where” in the Web of Things”</t>
  <t>Jean Paoli, Taqi Jaffri, “IoT Information Model Interoperability: An Open, Crowd-Sourced Approach in Three Parallel Parti”</t>
  <t>Joaquin Prado, “OMA Lightweight M2M Resource Model”</t>
  <t>Dave Raggett,  Soumya Kanti Datta, “Input paper for IAB Semantic Interoperability Workshop”</t>
  <t>Pete Rai, Stephen Tallamy, “Semantic Overlays Over Immutable Data to Facilitate Time and Context Specific Interoperability”</t>
  <t>Jasper Roes, Laura Daniele, “Towards semantic interoperability in the IoT using the Smart Appliances REFerence ontology (SAREF) and its extensions”</t>
  <t>Max Senges, “Submission for IAB IoT Sematic Interoperability workshop”</t>
  <t>Bill Silverajan, Mert Ocak, Jaime Jiménez, “Implementation Experiences of Semantic Interoperability for RESTful Gateway Management”</t>
  <t>Ned Smith, Jeff Sedayao, Claire Vishik, “Key Semantic Interoperability Gaps in the Internet-of-Things Meta-Models”</t>
  <t>Robert Sparks and Ben Campbell, “Considerations for certain IoT based services”</t>
  <t>J. Clarke Stevens, “Open Connectivity Foundation oneIoTa Tool”</t>
  <t>J. Clarke Stevens, Piper Merriam, “Derived Models for Interoperability Between IoT Ecosystems”</t>
  <t>Ravi Subramaniam, “Semantic Interoperability in Open Connectivity Foundation (OCF) – formerly Open Interconnect Consortium (OIC)””</t>
  <t>Andrew Sullivan, “Position paper for IOTSI workshop”</t>
  <t>Darshak Thakore, “IoT Security in the context of Semantic Interoperability”</t>
  <t>Dave Thaler, “IoT Bridge Taxonomy”</t>
  <t>Dave Thaler, S”ummary of AllSeen Alliance Work Relevant to Semantic Interoperability”</t>
  <t>Mark Underwood, Michael Gruninger, Leo Obrst, Ken Baclawski, Mike Bennett, Gary Berg-Cross, Torsten Hahmann, Ram Sriram, “Internet of Things: Toward Smart Networked Systems and Societies”</t>
  <t>Peter van der Stok, Andy Bierman, “YANG-Based Constrained Management Interface (CoMI)”</t>
</list></t>

</section>
<section anchor="appendix-c-list-of-participants" title="Appendix C: List of Participants">

<t><list style="symbols">
  <t>Andy Bierman, YumaWorks</t>
  <t>Carsten Bormann, Uni Bremen/TZI</t>
  <t>Ben Campbell, Oracle</t>
  <t>Benoit Claise, Cisco</t>
  <t>Alissa Cooper, Cisco</t>
  <t>Robert Cragie, ARM Limited</t>
  <t>Laura Daniele, TNO</t>
  <t>Bryant Eastham, OpenDof</t>
  <t>Christian Groves, Huawei</t>
  <t>Ted Hardie, Google</t>
  <t>Yonggeun Hong, ETRI</t>
  <t>Russ Housley, Vigil Security</t>
  <t>David Janes, IOTDB</t>
  <t>Jaime Jiménez, Ericsson</t>
  <t>Shailendra Karody, Catalina Labs</t>
  <t>Ari Keränen, Ericsson</t>
  <t>Michael Koster, SmartThings</t>
  <t>Matthias Kovatsch, Siemens</t>
  <t>Kai Kreuzer, Deutsche Telekom</t>
  <t>Barry Leiba, Huawei</t>
  <t>Steve Liang, Uni Calgary</t>
  <t>Marcello Lioy, Qualcomm</t>
  <t>Kerry Lynn, Verizon</t>
  <t>Mayan Mathen, Catalina Labs</t>
  <t>Erik Nordmenk, Arista</t>
  <t>Jean Paoli, Microsoft</t>
  <t>Joaquin Prado, OMA</t>
  <t>Dave Raggett, W3C</t>
  <t>Max Senges, Google</t>
  <t>Ned Smith, Intel</t>
  <t>Robert Sparks, Oracle</t>
  <t>Ram Sriram, NIST</t>
  <t>Clarke Stevens</t>
  <t>Ram Subramanian, Intel</t>
  <t>Andrew Sullivan, DIN</t>
  <t>Darshak Thakore, Cablelabs</t>
  <t>Dave Thaler, Microsoft</t>
  <t>Hannes Tschofenig, ARM Limited</t>
  <t>Michael Verschoor, Philips Lightning</t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference  anchor='RFC3444' target='http://www.rfc-editor.org/info/rfc3444'>
<front>
<title>On the Difference between Information Models and Data Models</title>
<author initials='A.' surname='Pras' fullname='A. Pras'><organization /></author>
<author initials='J.' surname='Schoenwaelder' fullname='J. Schoenwaelder'><organization /></author>
<date year='2003' month='January' />
<abstract><t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management.  This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='3444'/>
<seriesInfo name='DOI' value='10.17487/RFC3444'/>
</reference>


<reference anchor="IOTSIGIT" target="https://github.com/iotsi">
  <front>
    <title>Github Collaborative Repository</title>
    <author >
      <organization>IOTSI</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>
<reference anchor="IOTSIWS" target="https://www.iab.org/activities/workshops/iotsi/">
  <front>
    <title>IoT Workshop for Semantic Interoperability (IOTSI) 2016 - Main Page and Position Papers</title>
    <author >
      <organization>IAB</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>
<reference anchor="IOTSIAG" target="https://www.iab.org/activities/workshops/iotsi/agenda/">
  <front>
    <title>IoT Workshop for Semantic Interoperability (IOTSI) - Agenda and Slides</title>
    <author >
      <organization>IAB</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>
<reference anchor="UDI" >
  <front>
    <title>Object Oriented Approach to IoT Interoperability</title>
    <author initials="M." surname="Kohanim" fullname="Michel Kohanim">
      <organization>Universal Devices</organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="Proceedings" value="of the IoT Workshop for Semantic Interoperability (IOTSI)"/>
</reference>
<reference anchor="HATEOAS" >
  <front>
    <title>Semantic Interoperability Requires Self­describing Interaction Models - HATEOAS for the Internet of Things</title>
    <author initials="M." surname="Kovatsch" fullname="Matthias Kovatsch">
      <organization>Siemens</organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="Proceedings" value="of the IoT Semantic Interoperability Workshop 2016"/>
</reference>
<reference anchor="PYANG" >
  <front>
    <title>An extensible YANG validator and converter in python</title>
    <author initials="M." surname="Bjorklund" fullname="Martin Bjorklund">
      <organization></organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="https://github.com/mbj4668/pyang" value=""/>
</reference>
<reference anchor="Allseen-Plugin" >
  <front>
    <title>Using the AllJoyn Studio Extension</title>
    <author initials="B." surname="Rockwell" fullname="Brian Rockwell">
      <organization>Microsoft</organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="https://channel9.msdn.com/Blogs/Internet-of-Things-Blog/Using-the-AllJoyn--Studio-Extension" value=""/>
</reference>
<reference anchor="LWM2M-Schema" >
  <front>
    <title>OMA LWM2M XML Schema</title>
    <author initials="." fullname="">
      <organization>OMA</organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="http://technical.openmobilealliance.org/tech/profiles/LWM2M.xsd" value=""/>
</reference>
<reference anchor="OMNA" >
  <front>
    <title>OMNA Lightweight M2M (LWM2M) Object &amp; Resource Registry</title>
    <author initials="." fullname="">
      <organization>OMA</organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="http://technical.openmobilealliance.org/Technical/technical-information/omna/lightweight-m2m-lwm2m-object-registry" value=""/>
</reference>
<reference anchor="OMA-Editor" >
  <front>
    <title>OMA LWM2M Object and Resource Editor</title>
    <author initials="." fullname="">
      <organization>OMA</organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="http://dev_devtoolkit.openmobilealliance.org/OEditor/" value=""/>
</reference>
<reference anchor="nRF-Sniffer" >
  <front>
    <title>nRF Sniffer - Smart/Bluetooth low energy packet sniffer</title>
    <author initials="." fullname="">
      <organization>Nordic Semiconductor</organization>
    </author>
    <date year="2016"/>
  </front>
  <seriesInfo name="https://www.nordicsemi.com/eng/Products/Bluetooth-Smart-Bluetooth-low-energy/nRF-Sniffer" value=""/>
</reference>


    </references>



  </back>
</rfc>

